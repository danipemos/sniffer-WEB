services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
    networks:
      wg-easy:
        ipv4_address: 10.8.1.2    

  db:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      wg-easy:
        ipv4_address: 10.8.1.3
  wg-easy:
    environment:
      # ⚠️ Change the server's hostname (clients will connect to):
      - WG_HOST=192.168.1.61

      # ⚠️ Change the Web UI Password:
      - PASSWORD_HASH=$$2a$$12$$wWtaTnNE/EoQOcAGEnoECeL2elyhsoJ7.HvV6OWRKdoMu.BgjQj.2
      - WG_ALLOWED_IPS=10.8.1.0/24
    image: ghcr.io/wg-easy/wg-easy
    container_name: wg-easy
    hostname: wg-easy
    volumes:
      - ~/.wg-easy:/etc/wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      wg-easy:
        ipv4_address: 10.8.1.4
volumes:
  postgres-data:

networks:
  wg-easy:
    ipam:
      config:
        - subnet: 10.8.1.0/24